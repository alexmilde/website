{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/reviews/index.tsx", "../app/models/review.server.ts", "../app/routes/healthcheck.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError: (err: unknown) => {\n          reject(err);\n        },\n        onError: (error: unknown) => {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: tailwindStylesheetUrl }];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix Notes\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full bg-slate-50\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { getReviews } from \"~/models/review.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const noteListItems = await getReviews();\n  return json({ noteListItems });\n}\n\nexport default function NotesPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      {data.noteListItems.length === 0 ? (\n        <p className=\"p-4\">No notes yet</p>\n      ) : (\n        <div>\n          {data.noteListItems.map((review) => (\n            <div>\n              <h2>{review.name}</h2>\n              <p>{review.text}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport function getReviews() {\n  return prisma.reviews.findMany();\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can make a HEAD request to ourselves, then we're good.\n    await fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n      if (!r.ok) return Promise.reject(r);\n    });\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n}\n", "import heroImageUrl from \"../assets/hero-image.jpg\";\nimport remixLogoUrl from \"../assets/remix-logo.svg\";\nimport tailwindLogoUrl from \"../assets/tailwind.svg\";\nimport vitestLogoUrl from \"../assets/vitest.svg\";\nimport prettierLogoUrl from \"../assets/prettier.svg\";\nimport eslintLogoUrl from \"../assets/eslint.svg\";\nimport type { LinksFunction } from \"@remix-run/node\";\n\nconst LIBRARIES = [\n  {\n    src: tailwindLogoUrl,\n    alt: \"Tailwind\",\n    href: \"https://tailwindcss.com\",\n  },\n  {\n    src: vitestLogoUrl,\n    alt: \"Vitest\",\n    href: \"https://vitest.dev\",\n  },\n  {\n    src: prettierLogoUrl,\n    alt: \"Prettier\",\n    href: \"https://prettier.io\",\n  },\n  {\n    src: eslintLogoUrl,\n    alt: \"ESLint\",\n    href: \"https://eslint.org\",\n  },\n];\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"preload\", href: heroImageUrl },\n    ...LIBRARIES.map(({ src }) => ({\n      rel: \"preload\",\n      href: src,\n    })),\n  ];\n};\n\nexport default function Index() {\n  return (\n    <main className=\"min-h-screen\">\n      <h1>Hallo Welt</h1>\n    </main>\n  );\n}\n", "export default {'version':'c5c16331','entry':{'module':'/build/entry.client-W44DMYNK.js','imports':['/build/_shared/chunk-UPSQULZ2.js','/build/_shared/chunk-VIPVJV6J.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-JB2OWA4A.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-QB3PEZAZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-NTN4MNKC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reviews/index':{'id':'routes/reviews/index','parentId':'root','path':'reviews','index':true,'caseSensitive':undefined,'module':'/build/routes/reviews/index-KFIEMORZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-C5C16331.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/reviews/index.tsx\";\nimport * as route2 from \"./routes/healthcheck.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/reviews/index\": {\n      id: \"routes/reviews/index\",\n      parentId: \"root\",\n      path: \"reviews\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "links", "import_jsx_dev_runtime", "tailwind_default", "links"]
}
